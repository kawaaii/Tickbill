/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.hridaya.tickbill.view;

import com.hridaya.tickbill.database.DbConnection;
import com.hridaya.tickbill.session.SessionManager;

import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;

/**
 *
 * @author hridaya
 */
public class InvoiceUI extends javax.swing.JPanel {

    /**
     * Creates new form InvoiceUI
     */
    public InvoiceUI() {
        initComponents();
        invoiceLoad();
        userAccess();
    }

    private void userAccess() {
        SessionManager.userRoleEnum userRole = SessionManager.getInstance().getUserRole();

        if (userRole != SessionManager.userRoleEnum.ADMIN) {
            deleteButton.setEnabled(false);
            updateButton.setEnabled(false);
        }
    }

    private void invoiceLoad() {
        DefaultTableModel dtm = (DefaultTableModel) invoiceUiMainTable.getModel();
        dtm.setRowCount(0);

        try (Statement st = DbConnection.getConnection().createStatement()) {
            try (ResultSet rs = st.executeQuery("SELECT * FROM sales")) {
                while (rs.next()) {
                    ArrayList<String> invoiceLoad = new ArrayList<>();

                    // since data in table get serially loaded
                    invoiceLoad.add(rs.getString("invoice_id")); // invoice ID
                    invoiceLoad.add(rs.getString("customer_name")); // customer name
                    invoiceLoad.add(rs.getString("total_bill")); // total bill
                    invoiceLoad.add(rs.getString("status")); // status
                    invoiceLoad.add(rs.getString("due")); // due amount
                    invoiceLoad.add(rs.getString("user_id")); // billed by

                    dtm.addRow(invoiceLoad.toArray());
                }
            }
        } catch (SQLException e) {
            Utils.showError(e.getMessage());
        }
    }

    private void invoiceStatusChange() {
        String totalAmount = totalAmountTextField.getText();
        String paidAmount = paidAmountTextField.getText();

        double total = Double.parseDouble(totalAmount);
        double paid = Double.parseDouble(paidAmount);

        double due = total - paid;

        // Determine payment status
        String status;
        if (due <= 0) {
            status = "Paid";
        } else if (paid == 0) {
            status = "Pending";
        } else if (due > paid) {
            status = "Due";
        } else {
            status = "Partial";
        }

        invoiceStatusComboBox.setSelectedItem(status);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceUiMainTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        customerNameLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        customerNameTextField = new javax.swing.JTextField();
        invoiceStatusComboBox = new javax.swing.JComboBox<>();
        totalAmountTextField = new javax.swing.JTextField();
        dueAmountTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        paidAmountTextField = new javax.swing.JTextField();
        invoiceIdLabel = new javax.swing.JLabel();
        invoiceIdTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        searchButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setMaximumSize(new java.awt.Dimension(1300, 680));
        setMinimumSize(new java.awt.Dimension(1300, 680));

        invoiceUiMainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice ID", "Customer", "Total bill", "Status", "Due Amount", "Billed by (User ID)"
            }
        ));
        invoiceUiMainTable.setFocusable(false);
        invoiceUiMainTable.setShowGrid(true);
        invoiceUiMainTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceUiMainTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(invoiceUiMainTable);

        customerNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        customerNameLabel.setText("Customer Name:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Total Bill:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Due Amount:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Status:");

        customerNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        invoiceStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Paid", "Pending", "Due", "Partial" }));
        invoiceStatusComboBox.setSelectedIndex(-1);

        totalAmountTextField.setEnabled(false);

        dueAmountTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dueAmountTextField.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Paid Amount:");

        paidAmountTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        paidAmountTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paidAmountTextFieldKeyReleased(evt);
            }
        });

        invoiceIdLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        invoiceIdLabel.setText("Invoice ID:");

        invoiceIdTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        searchButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.setMaximumSize(new java.awt.Dimension(85, 27));
        searchButton.setMinimumSize(new java.awt.Dimension(85, 27));
        searchButton.setPreferredSize(new java.awt.Dimension(85, 27));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(searchButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(updateButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(paidAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(199, 199, 199))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(customerNameLabel)
                                    .addComponent(invoiceIdLabel))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(invoiceIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(invoiceStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dueAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(647, 647, 647))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoiceIdLabel)
                    .addComponent(invoiceIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNameLabel)
                    .addComponent(customerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(invoiceStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(totalAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(dueAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(paidAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        jSeparator1.setBackground(new java.awt.Color(172, 172, 172));
        jSeparator1.setForeground(new java.awt.Color(172, 172, 172));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        String customerName = customerNameTextField.getText();
        String invoiceStatus;
        if (invoiceStatusComboBox.getSelectedItem() == null) {
            invoiceStatus = "";
        } else {
            invoiceStatus = invoiceStatusComboBox.getSelectedItem().toString();
        }
        String totalAmount = totalAmountTextField.getText();
        String paidAmount = paidAmountTextField.getText();
        String invoiceId = invoiceIdTextField.getText();

        if (invoiceId.isEmpty()) {
            Utils.showError("Enter Invoice ID.");
            return;
        }

        if (totalAmount == null) {
            Utils.showError("Update the fields first with correct Invoice ID.");
            return;
        }

        if (customerName.isEmpty() || invoiceStatusComboBox.getSelectedItem() == null) {
            Utils.showError("Required input fields are absent.");
            return;
        }

        double total = Double.parseDouble(totalAmount);
        double paid = Double.parseDouble(paidAmount);

        double due = total - paid;

        String dueAmount = Double.toString(due);

        if (paid < 0) {
            Utils.showError("Paid amount cannot be negative.");
            return;
        }

        // sales db
        try {
            String sql = "UPDATE sales SET customer_name = ?, total_bill = ?, status = ?, due = ? "
                    + "WHERE invoice_id = ?";
            try (PreparedStatement pst = DbConnection.getConnection().prepareStatement(sql)) {
                pst.setString(1, customerName);
                pst.setString(2, totalAmount);
                pst.setString(3, invoiceStatus);
                pst.setString(4, dueAmount);
                pst.setString(5, invoiceId);
                int rowsAffected = pst.executeUpdate();
                if (rowsAffected > 0) {
                    Utils.showInfo("Per user invoice updated successfully.");
                } else {
                    Utils.showError("Failed to update invoice.");
                }
            }
        } catch (SQLException ex) {
            Utils.showError(ex.getMessage());
        }

        invoiceLoad();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String invoiceId = invoiceIdTextField.getText();
        String sql = "SELECT * FROM sales WHERE invoice_id = ?";

        if (invoiceId.isEmpty()) {
            Utils.showError("Enter Invoice ID.");
            return;
        }

        try (PreparedStatement pst = DbConnection.getConnection().prepareStatement(sql)) {
            pst.setString(1, invoiceId);
            try (ResultSet rs = pst.executeQuery()) {
                if (rs.next()) {
                    String customer_name = rs.getString("customer_name");
                    String total_bill = rs.getString("total_bill");
                    String status = rs.getString("status");
                    String due = rs.getString("due");

                    Double totalBillAmount = Double.valueOf(total_bill);
                    Double dueAmount = Double.valueOf(due);
                    Double paidAmount = totalBillAmount - dueAmount;

                    customerNameTextField.setText(customer_name);
                    invoiceStatusComboBox.setSelectedItem(status);
                    totalAmountTextField.setText(total_bill);
                    dueAmountTextField.setText(due);
                    paidAmountTextField.setText(String.valueOf(paidAmount));
                }
            }
        } catch (NumberFormatException | SQLException ex) {
            Utils.showError(ex.getMessage());
        }
        invoiceLoad();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        String invoiceId = invoiceIdTextField.getText();
        String checkSql = "SELECT * FROM sales WHERE invoice_id = ?";
        String deleteSql = "DELETE FROM sales WHERE invoice_id = ?";

        try (PreparedStatement checkPst = DbConnection.getConnection().prepareStatement(checkSql)) {
            checkPst.setString(1, invoiceId);
            ResultSet rs = checkPst.executeQuery();

            if (rs.next()) {
                try (PreparedStatement deletePst = DbConnection.getConnection().prepareStatement(deleteSql)) {
                    deletePst.setString(1, invoiceId);
                    deletePst.executeUpdate();
                    Utils.showInfo("Invoice deleted successfully.");
                }
            } else {
                Utils.showInfo("Invalid invoice ID. Deletion aborted.");
            }
        } catch (SQLException ex) {
            Utils.showError(ex.getMessage());
        }
        invoiceLoad();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void invoiceUiMainTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceUiMainTableMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) invoiceUiMainTable.getModel();
        int selectedRow = invoiceUiMainTable.getSelectedRow();
        String invoiceId = dtm.getValueAt(selectedRow, 0).toString();
        PerUserInvoiceUI pui = new PerUserInvoiceUI();
        pui.loadUserInvoice(Integer.parseInt(invoiceId));
        pui.setVisible(true);
    }//GEN-LAST:event_invoiceUiMainTableMouseClicked

    private void paidAmountTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paidAmountTextFieldKeyReleased
        invoiceStatusChange();
    }//GEN-LAST:event_paidAmountTextFieldKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JTextField customerNameTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField dueAmountTextField;
    private javax.swing.JLabel invoiceIdLabel;
    private javax.swing.JTextField invoiceIdTextField;
    private javax.swing.JComboBox<String> invoiceStatusComboBox;
    private javax.swing.JTable invoiceUiMainTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField paidAmountTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField totalAmountTextField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
